apply plugin: 'com.android.application'

// 版本发布名字
def APP_NAME = 'aorise'
// 版本发布时间
def BUILD_TIME = new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))

//repositories {
//    flatDir {
//        dirs 'libs'
//    }
//}

/**
 * 1. gradle clean
 * 2. gradle build / gradle assembleRelease
 */
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion '26.0.2'
    aaptOptions {
                 cruncherEnabled = false
                 useNewCruncher = false

             }
    dataBinding {
        enabled = true
    }
    defaultConfig {
        applicationId 'cn.aorise.platform'
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 7
        versionName '1.0.7'
        multiDexEnabled true

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    signingConfigs {
        release {
            try {
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
                storeFile file('../keystore/aoriseSignature.jks')
                storePassword STORE_PASSWORD
                v2SigningEnabled false
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }
    }
    buildTypes {
        def BASE_URL = 'BASE_URL'
        release {
            buildConfigField 'String', BASE_URL, '"https://api.douban.com/"'
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            buildConfigField 'String', BASE_URL, '"https://api.douban.com/"'
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            //signingConfig signingConfigs.release
        }
    }

    // Rename APP
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def name = APP_NAME + '-' + variant.productFlavors[0].name
            def version = 'v' + defaultConfig.versionName

            println 'variant.outputs: ${variant.buildType.name} output.outputFile: ${output.outputFile}'
            if (variant.buildType.name.equals('release')) {
                def apkName = name + '-' + version + '-' + BUILD_TIME + '-release.apk'
                output.outputFile = new File(output.outputFile.parent, apkName)
            }

            if (variant.buildType.name.equals('debug')) {
                // def apkName = name + '-' + version + '-' + BUILD_TIME + '-debug.apk'
                def apkName = name + '-debug.apk'
                output.outputFile = new File(output.outputFile.parent, apkName)
            }
        }
    }


    // 减少build时间
//    android.variantFilter { variant ->
//        if (!variant.getFlavors().get(0).name.equals('petitionStaff')) {
//            variant.setIgnore(true);
//        }
//    }

    android.variantFilter { variant ->
        //减少build时间
        //减少build时间  petition：用户  petitionStaff：工作人员
        if (!variant.getFlavors().get(0).name.equals('petition')) {
            variant.setIgnore(true);
        }
    }

    productFlavors {
        petition {
            applicationId 'cn.aorise.petition'

            versionCode 8
            versionName '1.0.8'

            manifestPlaceholders = [PACKAGE_NAME_VALUE: 'cn.aorise.petition',
                                    LOGIN_CLASS_NAME_VALUE  : 'cn.aorise.petition.ui.activity.MainActivity']
        }
        petitionStaff {
            applicationId 'cn.aorise.petition.staff'

            versionCode 8
            versionName '1.0.8'

            manifestPlaceholders = [PACKAGE_NAME_VALUE: 'cn.aorise.petition.staff',
                                    LOGIN_CLASS_NAME_VALUE  : 'cn.aorise.petition.staff.ui.activity.MainActivity']
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    // compile project(':commonLib')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.6-SNAPSHOT'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.6-SNAPSHOT'
    petitionCompile project(':plugin:petition')
    petitionStaffCompile project(':plugin:petitionStaff')
    compile 'com.android.support:multidex:1.0.1'
    // 内存检查
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
}

/**
 * gradle sonarqube
 */
apply from: '../config/sonarqube.gradle'